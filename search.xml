<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>week4</title>
      <link href="/2022/03/18/week4/"/>
      <url>/2022/03/18/week4/</url>
      
        <content type="html"><![CDATA[<h2 id="创建个人博客"><a href="#创建个人博客" class="headerlink" title="创建个人博客"></a>创建个人博客</h2><ul><li>设置端口，创建博客</li><li>更新博客：<ol><li>在blog/source/_posts下创新的markdown文档，并修改。</li><li>返回blog目录，输入hexo clean &amp;&amp; hexo g<br>  返回家目录，输入rsync -ahvP /root/blog/public/ /usr/share/nginx/html/<h2 id="vs网页版"><a href="#vs网页版" class="headerlink" title="vs网页版"></a>vs网页版</h2></li></ol></li><li>创建完vs网页版后，要保持终端不能关闭<br>  方法：使用tmux创建新的window，在该window内运行创建vs网页版的代码<h2 id="第四章简单总结"><a href="#第四章简单总结" class="headerlink" title="第四章简单总结"></a>第四章简单总结</h2></li><li>算术运算符(左结合律)：一元正号：+ 一元负号：- 乘法：* 除法：/  取余:% (参与的对象必须是整数类型，m%n的符号与m相同)</li><li>逻辑和关系运算符：</li></ul><ol><li>关系运算符：&lt; &lt;= &gt; &gt;= == != (左结合)</li><li>逻辑运算符： ！(右) &amp;&amp;(左) || (左)</li></ol><ul><li><p> 赋值运算符(右结合)<br>优先级低于关系运算符</p></li><li><p>递增和递减运算符（注：可能会引起未定义问题）</p></li><li><p>成员访问运算符<br>  ptr-&gt;men=(*ptr).men</p></li><li><p>条件运算符<br>  x？y：z<br>  若x成立，表达式值为y；反之为z。</p></li><li><p>位运算符</p><table><thead><tr><th align="center">运算符</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">~</td><td align="center">位求反</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">左移</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移</td></tr><tr><td align="center">&amp;</td><td align="center">位与</td></tr><tr><td align="center">^</td><td align="center">位异或</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table></li><li><p>sizeof 运算符(右结合律，结合律、优先级和*一样)</p></li></ul><p>两种形式：<br>sizeof(type)<br>sizeof expr<br>例子： sizeof p // 指针所占空间大小<br>sizeof *p  // p所指类型的空间大小</p><ul><li>逗号运算符<br>对于逗号运算符，首先对左侧的表达式求值，然后将求值结果丢弃吊。</li></ul><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h1 id="隐形转换"><a href="#隐形转换" class="headerlink" title="隐形转换"></a>隐形转换</h1><p>包括常量整数值 0 或者字面值nullptr能转换为任意指针类型<br>指向任意非常量的指针能转换成void*<br>指向任意对象的指针能转换为 const void * </p><h1 id="显示转换"><a href="#显示转换" class="headerlink" title="显示转换"></a>显示转换</h1><ul><li>static_cast </li></ul><p>只要不含有底层const，都可以使用static_cast</p><hr><p>double slope = static_cast<double> x；//正确<br>const char *p；<br>char * x=static _ cast&lt;char *&gt; (p) // 错误，不能改变底层const</p><hr><ul><li><p>const_cast<br>只能改变底层const</p></li><li><p>reinterpert_cast</p></li></ul><hr><p>int *ip；<br>char *pc=reinterpert_cast&lt;char *&gt;(ip)<br>//pc所指向的真实对象是一个int而非字符</p><hr>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/18/hello-world/"/>
      <url>/2022/03/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p><u>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</u><a href="hello">^1</a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a=1| D[结果1]</span><br><span class="line">    C --&gt; |a=2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>James</title>
      <link href="/2022/03/17/pre/"/>
      <url>/2022/03/17/pre/</url>
      
        <content type="html"><![CDATA[<h1 id="lebron-james"><a href="#lebron-james" class="headerlink" title="lebron james"></a><font size=12 color=blue  face="STCAIYUN"><em><strong>lebron james</strong></em></font></h1><p><img src="https://nimg.ws.126.net/?url=http://dingyue.ws.126.net/2022/0320/29f25071j00r90zj4002kc000hs00npg.jpg&thumbnail=660x800&quality=80&type=jpg"></p><h2 id="lebron-james-is-my-favorite-NBA-player-today-3-20-his-career-score-rose-to-second-in-history-I-would-like-to-introduce-this-great-star-to-you"><a href="#lebron-james-is-my-favorite-NBA-player-today-3-20-his-career-score-rose-to-second-in-history-I-would-like-to-introduce-this-great-star-to-you" class="headerlink" title="lebron james is my favorite NBA player, today(3.20),his career score rose to second in history.I would like to introduce this great star to you"></a><em><strong>lebron james is my favorite NBA player, today(3.20),his career score rose to second in history.I would like to introduce this great star to you</strong></em></h2><hr><p><img src="/~/pre/james.jpeg">  </p><hr><p><font size=12 color=#008000  face="STCAIYUN"> Difficult childhood </font></p><h2 id="December-30-1984"><a href="#December-30-1984" class="headerlink" title="December 30 1984"></a><em><strong>December 30 1984</strong></em></h2><ul><li> <em><strong><font size=6>Lebron was born in the akron ghetto in ohio,USA.However,his father abandoned him and his mother.</font></strong></em></li><li><em><strong><font size=6>He and his mother live in grandma’s rental house.They three depended on each other for survival.Unfortunately his grandma passed away at his 3 years old.</font></strong></em></li><li> <em><strong><font size=6>Because his mother couldn’t find a stable job,james had moved 12 times since he was 5 </font></strong></em></li></ul><hr><blockquote><p><font size=12 color=red  face="STCAIYUN"><em><strong>James’s basketball enlightment</strong></em></font></p><blockquote><ul><li><em><strong><font size=6 >At his 3,his mother give him a basketball as the birthday gift. He loved the baskketball very much.Even when sleeping,he still holding the ball</font></strong></em>   </li><li><em><strong><font size=6> At his 7,james’ exllent atheletic talent caught Coach Walker attention.Walker taught james basketball skills.And the little james always enjoys training .Soon James has surpassed other kids of the same age </div></strong></em></li></ul></blockquote></blockquote><hr><h2 id="Young-James"><a href="#Young-James" class="headerlink" title="Young James "></a><font size=12 color=green  face="STCAIYUN">Young James </font></h2><p><img src="https://pics2.baidu.com/feed/0d338744ebf81a4c7d1f917af8b5c95e242da6fe.jpeg?token=6eb6257c29eee7d1f9fc97da29245693"></p><p><em><strong><font size=6>In four years of high school, he won the state championship three times, and was selected as an American star three times.</font></strong></em></p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fq_mini%2Cc_zoom%2Cw_640%2Fimages%2F20171012%2F54ad7d9f477342bbb56aa866c4ebec8b.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1650355641&t=c38574dcd0d7070af28c50e7c2d09779"></p><ul><li><em><strong><font size=6>the AP(associated press ) called him “the son of heaven”.</font></strong></em></li><li><em><strong><font size=6>And James was extolled  as the first high school student in the US</font></strong></em></li></ul><p><font size=12 color=blue  face="STCAIYUN"> James in NBA </font><br><img src="https://pics6.baidu.com/feed/03087bf40ad162d9c1644e0f214000eb8b13cd45.jpeg?token=2cbcaea67f97518053e63cad99238232"></p><p><em><strong><font size=6 >In 2003, James was selected by the Cleveland Cavaliers as the champion into NBA</font></strong></em></p><h2 id="Achievements"><a href="#Achievements" class="headerlink" title="Achievements"></a><em><strong>Achievements</strong></em></h2><p><em><strong><font size=6> With superb skills and leadership,Jame has won four championships.</font></strong></em><br><img src="https://pics4.baidu.com/feed/0df3d7ca7bcb0a465238d807a9da8d236b60af33.jpeg?token=995ceb556cac658e7057ffd72a036feb"></p><p><font size=12 color=7FFf7F00  face="STCAIYUN"> James Off court</font></p><ul><li><em><strong>very frugal</strong></em></li><li><em><strong><font color=red>Charitable contribution</font></strong></em><ul><li><em><strong>2015 project” I Promise”,donated 87 million dollars</strong></em></li><li><em><strong>2016 donated 41 million 800 thousand dollars to akron</strong></em></li><li><em><strong>and so on</strong></em><br><img src="https://pics6.baidu.com/feed/4034970a304e251f549930f1f4ec0b1f7e3e53c4.jpeg?token=82633f919026497babee6a5e45ebe9ac"></li></ul></li></ul><p><font size=12 color=blue  face="STCAIYUN">Blessing</font></p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_bt%2F0%2F12119054926%2F1000.jpg&refer=http%3A%2F%2Finews.gtimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1650361205&t=0cde639476cddff0972aee7894c4b15e"></p><p> <em><strong><font size=7>I hope James can obtain  the satisfactory achievement.</font></strong></em></p><h1 id="Epilogue"><a href="#Epilogue" class="headerlink" title="Epilogue"></a><font size=12 color=blue  face="STCAIYUN">Epilogue</font></h1><p> <em><strong><font size=7 color=gold>Learn from  james’ fighting spirit of not bowing to fate</font></strong></em></p><p><em><strong><font size=12 color=blue  face="STCAIYUN">Thank you for listening</font></strong></em></p>]]></content>
      
      
      <categories>
          
          <category> English pre </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NBA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEEK5</title>
      <link href="/2022/03/17/week5note/"/>
      <url>/2022/03/17/week5note/</url>
      
        <content type="html"><![CDATA[<h1 id="WEEK5"><a href="#WEEK5" class="headerlink" title="WEEK5"></a>WEEK5</h1><h1 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h1><p><img src="https://s3.bmp.ovh/imgs/2022/03/c245dd829710adb9.png"></p><h2 id="5-1-简单语句"><a href="#5-1-简单语句" class="headerlink" title="5.1 简单语句"></a>5.1 简单语句</h2><ul><li><p>末尾加上分号就变成了表达式语句<br>  空语句：只有一个单独的分号</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; s &amp;&amp; s != sought)</span><br><span class="line">;//空语句</span><br></pre></td></tr></table></figure><ul><li>WARING:多余的空语句并非总是无害的！ </li></ul></li><li><h2 id="复合语句-别称块"><a href="#复合语句-别称块" class="headerlink" title="复合语句(别称块)"></a>复合语句(别称块)</h2><p> 所谓空块，是指内部没有任何语句的一对花括号。等价于空语句</p><h2 id="5-2-语句作用域"><a href="#5-2-语句作用域" class="headerlink" title="5.2 语句作用域"></a>5.2 语句作用域</h2><h2 id="5-3-条件语句"><a href="#5-3-条件语句" class="headerlink" title="5.3 条件语句"></a>5.3 条件语句</h2><ul><li> 5.3.1   if 语句</li></ul><ol><li>if else语句</li><li>嵌套语句(注意花括号)</li><li>悬垂else<br> if 多于else，不知匹配关系<br> 对于c++，规定else匹配离它最近的if。</li></ol><ul><li>5.3.2 switch语句<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">switch(ch)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span><span class="string">&#x27;a&#x27;</span>：</span><br><span class="line">    <span class="keyword">case</span><span class="string">&#x27;b&#x27;</span>：     <span class="built_in">break</span>；//a b两种情况执行相同命令，共用一个<span class="built_in">break</span></span><br><span class="line">    <span class="keyword">case</span> 10：      <span class="built_in">break</span>；</span><br><span class="line">    <span class="keyword">case</span> 3.14：    // <span class="keyword">case</span>后必须带整型常量表达式 </span><br><span class="line">    default:   <span class="built_in">break</span>;//其他所有情况</span><br><span class="line">&#125;</span><br><span class="line">// 每个<span class="keyword">case</span>语句后为安全起见，都要带<span class="built_in">break</span>语句，以防程序继续执行其他<span class="keyword">case</span>下的语句。</span><br></pre></td></tr></table></figure></li><li>switch内部变量定义<br>  switch执行流程可能跨过某些case标签。<br>  c++规定，不允许跨过变量的初始化语句的情况下直接跳转到该变量作用域内的另一个位置。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">   int a = 2;</span><br><span class="line">switch (a) &#123;</span><br><span class="line"><span class="keyword">case</span> 1:</span><br><span class="line">&#123;</span><br><span class="line">int x;</span><br><span class="line">cout &lt;&lt; <span class="string">1 &lt;&lt; endl;</span></span><br><span class="line"><span class="string">break;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">case 2: </span></span><br><span class="line"><span class="string">x = 100;</span></span><br><span class="line"><span class="string">cout &lt;&lt; x &lt;&lt; endl;</span></span><br><span class="line"><span class="string">&#125; //error：“x”: 未声明的标识符</span></span><br><span class="line"><span class="string">    int a = 2;</span></span><br><span class="line"><span class="string">switch (a) &#123;</span></span><br><span class="line"><span class="string">case 1</span>:</span><br><span class="line">int x = 2;</span><br><span class="line">cout &lt;&lt; <span class="string">1 &lt;&lt; endl;</span></span><br><span class="line"><span class="string">break;</span></span><br><span class="line"><span class="string">case 2: </span></span><br><span class="line"><span class="string">cout &lt;&lt; x &lt;&lt; endl;</span></span><br><span class="line"><span class="string">&#125;  //error: x初始化被跳过</span></span><br><span class="line"><span class="string">   int a = 2;</span></span><br><span class="line"><span class="string">switch (a) &#123;</span></span><br><span class="line"><span class="string">case 1</span>:</span><br><span class="line">int x ;</span><br><span class="line">cout &lt;&lt; <span class="string">1 &lt;&lt; endl;</span></span><br><span class="line"><span class="string">break;</span></span><br><span class="line"><span class="string">case 2: </span></span><br><span class="line"><span class="string">x=100;</span></span><br><span class="line"><span class="string">cout &lt;&lt; x &lt;&lt; endl;</span></span><br><span class="line"><span class="string">&#125; //正确</span></span><br></pre></td></tr></table></figure><h2 id="5-4-迭代语句"><a href="#5-4-迭代语句" class="headerlink" title="5.4 迭代语句"></a>5.4 迭代语句</h2><ul><li>while语句</li><li>for语句<br>for(initstatement；condition；expession)<br>initstatement定义的变量类型相同。</li><li><h2 id="范围for语句"><a href="#范围for语句" class="headerlink" title="范围for语句"></a>范围for语句</h2></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(declaration ：expression)</span><br><span class="line">statement</span><br><span class="line">//expression必须是一个序列：花括号初始值列表，数组，vector 或string等对象</span><br><span class="line">共同点：拥有能返回迭代器的begin和end成员</span><br></pre></td></tr></table></figure><ul><li>do while语句</li></ul><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><ul><li>break语句：跳出所在的条件或循环语句<br>  在嵌套中，作用于最近的循环。</li><li>continue语句：跳过当前迭代，继续下次迭代(继续循环)</li><li>goto语句：label：<br>  goto label；<br>！！WARNING：不要在程序中使用goto，与switch类似会跨过某些变量的初始化。</li></ul><h2 id="try语句块和异常处理"><a href="#try语句块和异常处理" class="headerlink" title="try语句块和异常处理"></a>try语句块和异常处理</h2><ul><li>throw 表达式</li></ul><p> throw 后紧随一个表达式，表达式的类型就是抛出的异常类型<br> throw runtime_error(“DATA must refer to same ISBN”)</p><ul><li>try语句块</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">try&#123;programmestatement//在此throw异常&#125;</span><br><span class="line">catch(exception-declaration)&#123;handler-statement&#125;</span><br><span class="line"><span class="function"><span class="title">catch</span></span>()&#123;&#125;....</span><br></pre></td></tr></table></figure><ul><li>标准异常</li><li>exception头文件定义了最通用的异常类exception。它只报告异常的发生，不提供额外的信息。</li><li>stdexcept头文件定义了常用的异常类</li></ul><table><thead><tr><th align="center">类型</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">exception</td><td align="center">最常见的问题</td></tr><tr><td align="center">runtime_error</td><td align="center">只有在运行是才能检测出的问题</td></tr><tr><td align="center">range_error</td><td align="center">运行时错误：生成的结果超出了有意义的值域范围</td></tr><tr><td align="center">overflow_error</td><td align="center">运行时：计算上溢</td></tr><tr><td align="center">underflow_error</td><td align="center">运行时：计算下溢</td></tr><tr><td align="center">logic_error</td><td align="center">程序逻辑错误</td></tr><tr><td align="center">domain_error</td><td align="center">参数对于的结果值不存在？</td></tr><tr><td align="center">invalid_argument</td><td align="center">无效参数？</td></tr><tr><td align="center">length_error</td><td align="center">视图创建一个超过该类型最大长度的对象</td></tr><tr><td align="center">out_of_range</td><td align="center">使用一个超出有效范围的值</td></tr></tbody></table><ul><li><p>new头文件定义了bad_alloc异常类型</p></li><li><p>type_info头文件定义了bad_cast异常类型</p></li><li><p>note：我们只能以默认初始化的方式初始化exception bad_alloc<br>bad_cast对象<br>其他异常类型恰相反，应该用string对象或者c风格字符串初始化这些类型的对象，不允许使用默认初始化。</p></li><li><p>异常类型只定义了一个名为what的成员函数，没有任何参数，返回值是一个指向c风格字符串的const char*</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
